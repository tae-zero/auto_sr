version: '3.8'

services:
  # MSA Gateway
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: msa-gateway
    ports:
      - "8000:8000"
    environment:
      - GATEWAY_HOST=0.0.0.0
      - GATEWAY_PORT=8000
      - LOG_LEVEL=INFO
      - REQUEST_TIMEOUT=30
      - HEALTH_CHECK_INTERVAL=30
    volumes:
      - ./logs:/app/logs
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # User Service (테스트용)
  user-service-1:
    build:
      context: .
      dockerfile: Dockerfile.test-service
    container_name: user-service-1
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=user-service
      - SERVICE_PORT=8001
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  user-service-2:
    build:
      context: .
      dockerfile: Dockerfile.test-service
    container_name: user-service-2
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=user-service
      - SERVICE_PORT=8002
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Order Service (테스트용)
  order-service-1:
    build:
      context: .
      dockerfile: Dockerfile.test-service
    container_name: order-service-1
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=order-service
      - SERVICE_PORT=8003
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  order-service-2:
    build:
      context: .
      dockerfile: Dockerfile.test-service
    container_name: order-service-2
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=order-service
      - SERVICE_PORT=8004
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Product Service (테스트용)
  product-service:
    build:
      context: .
      dockerfile: Dockerfile.test-service
    container_name: product-service
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=product-service
      - SERVICE_PORT=8005
    networks:
      - msa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis (선택사항 - 향후 캐싱 기능용)
  redis:
    image: redis:7-alpine
    container_name: msa-redis
    ports:
      - "6379:6379"
    networks:
      - msa-network
    restart: unless-stopped

networks:
  msa-network:
    driver: bridge 