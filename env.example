# =============================================================================
# ESG MATE MSA 프로젝트 환경변수 설정
# =============================================================================
# 이 파일을 .env로 복사하고 실제 값으로 수정하세요
# cp env.example .env

# =============================================================================
# 🚀 배포 환경 설정
# =============================================================================
# 배포 환경: development, production, docker, railway, vercel
DEPLOYMENT_ENV=development

# =============================================================================
# 🗄️ 데이터베이스 설정
# =============================================================================
# PostgreSQL 연결 문자열
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# 데이터베이스 초기화 여부
INIT_DATABASE=true

# =============================================================================
# 🔐 JWT 인증 설정
# =============================================================================
# JWT 시크릿 키 (모든 서비스에서 동일해야 함)
JWT_SECRET_KEY=your-super-secret-jwt-key-here

# JWT 토큰 만료 기간 (일)
JWT_EXPIRES_IN_DAYS=30

# JWT 알고리즘
JWT_ALGORITHM=HS256

# =============================================================================
# 🌐 Gateway 서비스 설정
# =============================================================================
# Gateway 호스트 및 포트
GATEWAY_HOST=0.0.0.0
GATEWAY_PORT=8080

# Gateway 자동 리로드
GATEWAY_RELOAD=false

# 서비스 디스컴버리 타입
SERVICE_DISCOVERY_TYPE=static

# 로드 밸런서 타입
LOAD_BALANCER_TYPE=round_robin

# 요청 타임아웃 (초)
REQUEST_TIMEOUT=30

# 헬스 체크 간격 (초)
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# 🔒 CORS 설정
# =============================================================================
# CORS 허용 오리진 (쉼표로 구분)
CORS_ORIGINS=["*"]

# CORS 자격 증명 허용
CORS_ALLOW_CREDENTIALS=true

# CORS 허용 메서드
CORS_ALLOW_METHODS=["*"]

# CORS 허용 헤더
CORS_ALLOW_HEADERS=["*"]

# =============================================================================
# 🐳 Docker 환경 설정
# =============================================================================
# Docker 환경 여부
RAILWAY_ENVIRONMENT=false

# 로컬 서비스 사용 여부
USE_LOCAL_AUTH=true
USE_LOCAL_CHATBOT=true
USE_RAILWAY_TCFD=false

# =============================================================================
# 🚂 Railway 환경 설정
# =============================================================================
# Railway 서비스 URLs (프로덕션 환경)
RAILWAY_AUTH_SERVICE_URL=https://auth-service-production.up.railway.app
RAILWAY_CHATBOT_SERVICE_URL=https://chatbot-service-production.up.railway.app
RAILWAY_TCFD_SERVICE_URL=https://tcfd-service-production.up.railway.app
RAILWAY_TCFD_REPORT_SERVICE_URL=https://tcfdreport-service-production.up.railway.app

# =============================================================================
# 🏢 서비스 포트 설정 (Docker 환경)
# =============================================================================
# Auth Service
AUTH_SERVICE_PORT=8008

# Chatbot Service
CHATBOT_SERVICE_PORT=8001

# TCFD Service
TCFD_SERVICE_PORT=8005

# TCFD Report Service
TCFD_REPORT_SERVICE_PORT=8004

# GRI Service
GRI_SERVICE_PORT=8006

# Materiality Service
MATERIALITY_SERVICE_PORT=8007

# Redis
REDIS_PORT=6379

# =============================================================================
# 🤖 AI 및 LangChain 설정
# =============================================================================
# OpenAI API 설정
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.3

# 벡터 데이터베이스 설정
VECTOR_DB_TYPE=chroma
CHROMA_PERSIST_DIRECTORY=./chroma_db

# 파일 업로드 설정
MAX_FILE_SIZE=20971520
SUPPORTED_FILE_TYPES=txt,pdf,docx,md

# =============================================================================
# 📱 Frontend 설정
# =============================================================================
# Next.js 포트
PORT=3000

# API 기본 URL
NEXT_PUBLIC_API_URL=http://localhost:8080/api

# Gateway URL
NEXT_PUBLIC_GATEWAY_URL=http://localhost:8080

# 서비스별 URL (프론트엔드에서 직접 접근 시)
NEXT_PUBLIC_AUTH_URL=http://localhost:8008
NEXT_PUBLIC_CHATBOT_URL=http://localhost:8001
NEXT_PUBLIC_TCFD_SERVICE_URL=http://localhost:8005
NEXT_PUBLIC_AUTH_SERVICE_URL=http://localhost:8008

# =============================================================================
# 🔧 개발 환경 설정
# =============================================================================
# Python 설정
PYTHONUNBUFFERED=1
PYTHONPATH=/app

# 로깅 레벨
LOG_LEVEL=INFO

# 서비스 호스트
SERVICE_HOST=0.0.0.0

# =============================================================================
# 🧪 테스트 환경 설정
# =============================================================================
# 테스트 데이터베이스 URL
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db

# 테스트 모드
TESTING=false

# =============================================================================
# 📊 모니터링 설정
# =============================================================================
# 헬스 체크 경로
HEALTH_CHECK_PATH=/health

# 메트릭 수집 여부
ENABLE_METRICS=true

# 로그 수집 여부
ENABLE_LOGGING=true
